library IEEE;
use IEEE.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;
use ieee.std_logic_textio.all;
use std.textio.all;

Entity InstructionMemory is
  port(clk            : in std_logic;
      PC_value        : in std_logic_vector(31 downto 0);
      Instruction_out : out std_logic_vector(31 downto 0)
      );
End Entity InstructionMemory;

Architecture arch_InstructionMemory Of InstructionMemory Is
  type ram_type is array (0 to 4095) of std_logic_vector(15 downto 0); --2^12=4KB  4096 byte
	signal ram       : ram_type;
	signal rPC_value :  std_logic_vector(31 downto 0);
  BEGIN
       rPC_value<= std_logic_vector(unsigned(PC_value) + 1);
                FILE f : TEXT;
                constant filename : string :="Instructions.txt";
                VARIABLE L : LINE;
                variable i : integer:=0;
                variable b : std_logic_vector(31 downto 0);
                begin
                    File_Open (f,FILENAME, read_mode);	
			              while ((i<=5) and (not EndFile (f))) loop
			              readline (f, l);
			              next when l(1) = '#'; 
			              read(l, b);
			              ram(i) <= b;
			              i <= i + 1;
		                end loop;
		                File_Close (f);
          process(PC_value)
            begin
	       Instruction_out    <= ram(to_integer(unsigned(PC_value)))& ram(to_integer(unsigned(rPC_value)));
	       end process;
End arch_InstructionMemory;    